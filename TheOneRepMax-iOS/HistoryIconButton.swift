//
//  HistoryIconView.swift
//  TheOneRepMax
//
//  Created by Developer on 8/25/16.
//  Copyright Â© 2016 JwitApps. All rights reserved.
//

import UIKit

class HistoryIconButton: UIButton {

    override init(frame: CGRect) {
        super.init(frame: frame)
        opaque = false
        addObserver(self, forKeyPath: "highlighted", options: .New, context: nil)
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    override func observeValueForKeyPath(keyPath: String?, ofObject object: AnyObject?, change: [String : AnyObject]?, context: UnsafeMutablePointer<Void>) {
        setNeedsDisplay()
    }
    
    override func drawRect(rect: CGRect) {
        let color = highlighted ? UIColor.whiteColor() : UIColor.blackColor()
        
        let rootLayer = CAShapeLayer() // Generated by Svgsus
        ({
            let layer1 = CAShapeLayer()
            layer1.fillColor = color.CGColor
            layer1.strokeColor = color.CGColor
            layer1.lineWidth = 1
            rootLayer.addSublayer(layer1)
            let path = UIBezierPath()
            path.moveToPoint(CGPoint(x: 11.99, y: 2))
            path.addCurveToPoint(CGPoint(x: 2, y: 12), controlPoint1: CGPoint(x: 6.47, y: 2), controlPoint2: CGPoint(x: 2, y: 6.48))
            path.addCurveToPoint(CGPoint(x: 11.99, y: 22), controlPoint1: CGPoint(x: 2, y: 17.52), controlPoint2: CGPoint(x: 6.47, y: 22))
            path.addCurveToPoint(CGPoint(x: 22, y: 12), controlPoint1: CGPoint(x: 17.52, y: 22), controlPoint2: CGPoint(x: 22, y: 17.52))
            path.addCurveToPoint(CGPoint(x: 11.99, y: 2), controlPoint1: CGPoint(x: 22, y: 6.48), controlPoint2: CGPoint(x: 17.52, y: 2))
            path.closePath()
            path.moveToPoint(CGPoint(x: 12, y: 20))
            path.addCurveToPoint(CGPoint(x: 4, y: 12), controlPoint1: CGPoint(x: 7.58, y: 20), controlPoint2: CGPoint(x: 4, y: 16.42))
            path.addCurveToPoint(CGPoint(x: 12, y: 4), controlPoint1: CGPoint(x: 4, y: 7.579999999999998), controlPoint2: CGPoint(x: 7.58, y: 4))
            path.addCurveToPoint(CGPoint(x: 20, y: 12), controlPoint1: CGPoint(x: 16.42, y: 4), controlPoint2: CGPoint(x: 20, y: 7.58))
            path.addCurveToPoint(CGPoint(x: 12, y: 20), controlPoint1: CGPoint(x: 20, y: 16.42), controlPoint2: CGPoint(x: 16.42, y: 20))
            path.closePath()
            path.moveToPoint(CGPoint(x: 12.5, y: 7))
            path.addLineToPoint(CGPoint(x: 11, y: 7))
            path.addLineToPoint(CGPoint(x: 11, y: 13))
            path.addLineToPoint(CGPoint(x: 16.25, y: 16.15))
            path.addLineToPoint(CGPoint(x: 17, y: 14.919999999999998))
            path.addLineToPoint(CGPoint(x: 12.5, y: 12.249999999999998))
            path.closePath()
            layer1.path = path.CGPath
        })()
        rootLayer.bounds = CGRect(x: 0, y: 0, width: 24, height: 24)
        rootLayer.anchorPoint = CGPoint(x: 0, y: 0)
        
        layer.addSublayer(rootLayer)
    }
    
}
